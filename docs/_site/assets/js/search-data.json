{"0": {
    "doc": "Backlog",
    "title": "Backlog",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/backlog/",
    "relUrl": "/docs/produto/backlog/"
  },"1": {
    "doc": "Backlog",
    "title": "Histórico de versão",
    "content": "| Data | Versão | Modificação | Autor | :–: | :—-: | :———: | :—: | 20/07/2022 | 1.0 | Criação do documento | Todos de MDS e EPS | 17/08/2022 | 1.1 | Documentação do artefato | Lucas Ganda Carvalho | 18/08/2022 | 1.2 | Adição da definição de backlog do produto | João Gabriel Antunes | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/backlog/#hist%C3%B3rico-de-vers%C3%A3o",
    "relUrl": "/docs/produto/backlog/#histórico-de-versão"
  },"2": {
    "doc": "Backlog",
    "title": "Introdução",
    "content": "O projeto iniciou com a Lean Inception, que é um workshop colaborativo dividido em várias etapas e atividades, que através de reuniões e debates, serviu pra direcionar e orientar a equipe na construção do produto. Após a Lean Inception, foi possível definir o backlog do produto e definir as histórias de usuários a serem desenvolvidas durante o projeto, além das melhorias e dos bugs. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/backlog/#introdu%C3%A7%C3%A3o",
    "relUrl": "/docs/produto/backlog/#introdução"
  },"3": {
    "doc": "Backlog",
    "title": "Backlog do produto",
    "content": "Em termos gerais, o Product BackLog é uma listagem de todos os afazeres pendentes no projeto. Ele substitui o modelo tradicional de especificação de artefatos. Cada elemento da listagem é elicitado por meio de interação da equipe de desenvolvimento com o Cliente - podendo ser apenas um representante, o que torna os elementos levantados muito arbitrários; ou podendo ser uma equipe representante do Cliente, representando as diversas áreas que utilizarão o produto. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/backlog/#backlog-do-produto",
    "relUrl": "/docs/produto/backlog/#backlog-do-produto"
  },"4": {
    "doc": "Backlog",
    "title": "Histórias de Usuário",
    "content": "Uma história do usuário é uma explicação informal sobre uma determinada funcionalidade ou recurso de um software do ponto de vista de um usuário . Seu objetivo é facilitar o entendimento de como o recurso gera valor ao usuário. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/backlog/#hist%C3%B3rias-de-usu%C3%A1rio",
    "relUrl": "/docs/produto/backlog/#histórias-de-usuário"
  },"5": {
    "doc": "Backlog",
    "title": "Referências",
    "content": ". | REHKOPF, Max. Histórias de usuários com exemplos e um template. Disponível em https://www.atlassian.com/br/agile/project-management/user-stories. Acesso em: 17 ago. 2022. | RADIGAN, Dan. O backlog do produto: sua lista de tarefas definitiva. Disponível em https://www.atlassian.com/br/agile/scrum/backlogs. Acesso em: 17 ago. 2022. | NARECHANIA, Nishal. The Fundamentals of User Stories and Product Backlogs. Disponível em https://medium.com/nsquared-labs/user-stories-and-the-product-backlog-in-scrum-c87d36df4b96. Acesso em: 17 ago. 202 . | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/backlog/#refer%C3%AAncias",
    "relUrl": "/docs/produto/backlog/#referências"
  },"6": {
    "doc": "Buttons",
    "title": "Buttons",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/buttons/",
    "relUrl": "/docs/ui-components/buttons/"
  },"7": {
    "doc": "Buttons",
    "title": "Table of contents",
    "content": ". | Basic button styles . | Links that look like buttons | Button element | . | Using utilities with buttons . | Button size | Spacing between buttons | . | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/buttons/#table-of-contents",
    "relUrl": "/docs/ui-components/buttons/#table-of-contents"
  },"8": {
    "doc": "Buttons",
    "title": "Basic button styles",
    "content": "Links that look like buttons . Link button . Link button Link button Link button . Link button . [Link button](http://example.com/){: .btn } [Link button](http://example.com/){: .btn .btn-purple } [Link button](http://example.com/){: .btn .btn-blue } [Link button](http://example.com/){: .btn .btn-green } [Link button](http://example.com/){: .btn .btn-outline } . Button element . GitHub Flavored Markdown does not support the button element, so you’ll have to use inline HTML for this: . Button element &lt;button type=\"button\" name=\"button\" class=\"btn\"&gt;Button element&lt;/button&gt; . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/buttons/#basic-button-styles",
    "relUrl": "/docs/ui-components/buttons/#basic-button-styles"
  },"9": {
    "doc": "Buttons",
    "title": "Using utilities with buttons",
    "content": "Button size . Wrap the button in a container that uses the font-size utility classes to scale buttons: . Big ass button . Tiny ass button . &lt;span class=\"fs-8\"&gt; [Link button](http://example.com/){: .btn } &lt;/span&gt; &lt;span class=\"fs-3\"&gt; [Tiny ass button](http://example.com/){: .btn } &lt;/span&gt; . Spacing between buttons . Use the margin utility classes to add spacing between two buttons in the same block. Button with space Button . Button with more space Button . [Button with space](http://example.com/){: .btn .btn-purple .mr-2 } [Button ](http://example.com/){: .btn .btn-blue } [Button with more space](http://example.com/){: .btn .btn-green .mr-4 } [Button ](http://example.com/){: .btn .btn-blue } . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/buttons/#using-utilities-with-buttons",
    "relUrl": "/docs/ui-components/buttons/#using-utilities-with-buttons"
  },"10": {
    "doc": "Code",
    "title": "Code",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/",
    "relUrl": "/docs/ui-components/code/"
  },"11": {
    "doc": "Code",
    "title": "Table of contents",
    "content": ". | Inline code | Syntax highlighted code blocks | Code blocks with rendered examples | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/#table-of-contents",
    "relUrl": "/docs/ui-components/code/#table-of-contents"
  },"12": {
    "doc": "Code",
    "title": "Inline code",
    "content": "Code can be rendered inline by wrapping it in single back ticks. Lorem ipsum dolor sit amet, &lt;inline code snippet&gt; adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/#inline-code",
    "relUrl": "/docs/ui-components/code/#inline-code"
  },"13": {
    "doc": "Code",
    "title": "Heading with &lt;inline code snippet&gt; in it.",
    "content": "Lorem ipsum dolor sit amet, `&lt;inline code snippet&gt;` adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ## Heading with `&lt;inline code snippet&gt;` in it. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/#heading-with-inline-code-snippet-in-it",
    "relUrl": "/docs/ui-components/code/#heading-with-inline-code-snippet-in-it"
  },"14": {
    "doc": "Code",
    "title": "Syntax highlighted code blocks",
    "content": "Use Jekyll’s built-in syntax highlighting with Rouge for code blocks by using three backticks, followed by the language name: . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } . ```js // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } ``` . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/#syntax-highlighted-code-blocks",
    "relUrl": "/docs/ui-components/code/#syntax-highlighted-code-blocks"
  },"15": {
    "doc": "Code",
    "title": "Code blocks with rendered examples",
    "content": "To demonstrate front end code, sometimes it’s useful to show a rendered example of that code. After including the styles from your project that you’ll need to show the rendering, you can use a &lt;div&gt; with the code-example class, followed by the code block syntax. If you want to render your output with Markdown instead of HTML, use the markdown=\"1\" attribute to tell Jekyll that the code you are rendering will be in Markdown format… This is about to get meta… . Link button . [Link button](http://example.com/){: .btn } . &lt;div class=\"code-example\" markdown=\"1\"&gt; [Link button](http://example.com/){: .btn } &lt;/div&gt; ```markdown [Link button](http://example.com/){: .btn } ``` . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/#code-blocks-with-rendered-examples",
    "relUrl": "/docs/ui-components/code/#code-blocks-with-rendered-examples"
  },"16": {
    "doc": "Color",
    "title": "Color Utilities",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#color-utilities",
    "relUrl": "/docs/utilities/color/#color-utilities"
  },"17": {
    "doc": "Color",
    "title": "Table of contents",
    "content": ". | Light Greys | Dark Greys | Purples | Blues | Greens | Yellows | Reds | . All the colors used in Just the Docs have been systematized into a series of variables that have been extended to both font color and background color utility classes. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#table-of-contents",
    "relUrl": "/docs/utilities/color/#table-of-contents"
  },"18": {
    "doc": "Color",
    "title": "Light Greys",
    "content": "| Color value | Font color utility | Background color utility | . | grey-lt-000 | .text-grey-lt-000 | .bg-grey-lt-000 | . | grey-lt-100 | .text-grey-lt-100 | .bg-grey-lt-100 | . | grey-lt-200 | .text-grey-lt-200 | .bg-grey-lt-200 | . | grey-lt-300 | .text-grey-lt-300 | .bg-grey-lt-300 | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#light-greys",
    "relUrl": "/docs/utilities/color/#light-greys"
  },"19": {
    "doc": "Color",
    "title": "Dark Greys",
    "content": "| Color value | Font color utility | Background color utility | . | grey-dk-000 | .text-grey-dk-000 | .bg-grey-dk-000 | . | grey-dk-100 | .text-grey-dk-100 | .bg-grey-dk-100 | . | grey-dk-200 | .text-grey-dk-200 | .bg-grey-dk-200 | . | grey-dk-250 | .text-grey-dk-250 | .bg-grey-dk-250 | . | grey-dk-300 | .text-grey-dk-300 | .bg-grey-dk-300 | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#dark-greys",
    "relUrl": "/docs/utilities/color/#dark-greys"
  },"20": {
    "doc": "Color",
    "title": "Purples",
    "content": "| Color value | Font color utility | Background color utility | . | purple-000 | .text-purple-000 | .bg-purple-000 | . | purple-100 | .text-purple-100 | .bg-purple-100 | . | purple-200 | .text-purple-200 | .bg-purple-200 | . | purple-300 | .text-purple-300 | .bg-purple-300 | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#purples",
    "relUrl": "/docs/utilities/color/#purples"
  },"21": {
    "doc": "Color",
    "title": "Blues",
    "content": "| Color value | Font color utility | Background color utility | . | blue-000 | .text-blue-000 | .bg-blue-000 | . | blue-100 | .text-blue-100 | .bg-blue-100 | . | blue-200 | .text-blue-200 | .bg-blue-200 | . | blue-300 | .text-blue-300 | .bg-blue-300 | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#blues",
    "relUrl": "/docs/utilities/color/#blues"
  },"22": {
    "doc": "Color",
    "title": "Greens",
    "content": "| Color value | Font color utility | Background color utility | . | green-000 | .text-green-000 | .bg-green-000 | . | green-100 | .text-green-100 | .bg-green-100 | . | green-200 | .text-green-200 | .bg-green-200 | . | green-300 | .text-green-300 | .bg-green-300 | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#greens",
    "relUrl": "/docs/utilities/color/#greens"
  },"23": {
    "doc": "Color",
    "title": "Yellows",
    "content": "| Color value | Font color utility | Background color utility | . | yellow-000 | .text-yellow-000 | .bg-yellow-000 | . | yellow-100 | .text-yellow-100 | .bg-yellow-100 | . | yellow-200 | .text-yellow-200 | .bg-yellow-200 | . | yellow-300 | .text-yellow-300 | .bg-yellow-300 | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#yellows",
    "relUrl": "/docs/utilities/color/#yellows"
  },"24": {
    "doc": "Color",
    "title": "Reds",
    "content": "| Color value | Font color utility | Background color utility | . | red-000 | .text-red-000 | .bg-red-000 | . | red-100 | .text-red-100 | .bg-red-100 | . | red-200 | .text-red-200 | .bg-red-200 | . | red-300 | .text-red-300 | .bg-red-300 | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/#reds",
    "relUrl": "/docs/utilities/color/#reds"
  },"25": {
    "doc": "Color",
    "title": "Color",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/color/",
    "relUrl": "/docs/utilities/color/"
  },"26": {
    "doc": "Configuration",
    "title": "Configuration",
    "content": "Just the Docs has some specific configuration parameters that can be defined in your Jekyll site’s _config.yml file. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/",
    "relUrl": "/docs/configuration/"
  },"27": {
    "doc": "Configuration",
    "title": "Table of contents",
    "content": ". | Site logo | Search | Aux links | Heading anchor links | Footer content | Color scheme | Google Analytics | Document collections | . View this site’s _config.yml file as an example. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#table-of-contents",
    "relUrl": "/docs/configuration/#table-of-contents"
  },"28": {
    "doc": "Configuration",
    "title": "Site logo",
    "content": "# Set a path/url to a logo that will be displayed instead of the title logo: \"/assets/images/just-the-docs.png\" . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#site-logo",
    "relUrl": "/docs/configuration/#site-logo"
  },"29": {
    "doc": "Configuration",
    "title": "Search",
    "content": "# Enable or disable the site search # Supports true (default) or false search_enabled: true search: # Split pages into sections that can be searched individually # Supports 1 - 6, default: 2 heading_level: 2 # Maximum amount of previews per search result # Default: 3 previews: 3 # Maximum amount of words to display before a matched word in the preview # Default: 5 preview_words_before: 5 # Maximum amount of words to display after a matched word in the preview # Default: 10 preview_words_after: 10 # Set the search token separator # Default: /[\\s\\-/]+/ # Example: enable support for hyphenated search words tokenizer_separator: /[\\s/]+/ # Display the relative url in search results # Supports true (default) or false rel_url: true # Enable or disable the search button that appears in the bottom right corner of every page # Supports true or false (default) button: false . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#search",
    "relUrl": "/docs/configuration/#search"
  },"30": {
    "doc": "Configuration",
    "title": "Aux links",
    "content": "# Aux links for the upper right navigation aux_links: \"Just the Docs on GitHub\": - \"//github.com/just-the-docs/just-the-docs\" # Makes Aux links open in a new tab. Default is false aux_links_new_tab: false . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#aux-links",
    "relUrl": "/docs/configuration/#aux-links"
  },"31": {
    "doc": "Configuration",
    "title": "Heading anchor links",
    "content": "# Heading anchor links appear on hover over h1-h6 tags in page content # allowing users to deep link to a particular heading on a page. # # Supports true (default) or false heading_anchors: true . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#heading-anchor-links",
    "relUrl": "/docs/configuration/#heading-anchor-links"
  },"32": {
    "doc": "Configuration",
    "title": "Footer content",
    "content": "# Footer content # appears at the bottom of every page's main content # Note: The footer_content option is deprecated and will be removed in a future major release. Please use `_includes/footer_custom.html` for more robust markup / liquid-based content. footer_content: \"Copyright &amp;copy; 2017-2020 Patrick Marsceill. Distributed by an &lt;a href=\\\"https://github.com/just-the-docs/just-the-docs/tree/main/LICENSE.txt\\\"&gt;MIT license.&lt;/a&gt;\" # Footer last edited timestamp last_edit_timestamp: true # show or hide edit time - page must have `last_modified_date` defined in the frontmatter last_edit_time_format: \"%b %e %Y at %I:%M %p\" # uses ruby's time format: https://ruby-doc.org/stdlib-2.7.0/libdoc/time/rdoc/Time.html # Footer \"Edit this page on GitHub\" link text gh_edit_link: true # show or hide edit this page link gh_edit_link_text: \"Edit this page on GitHub.\" gh_edit_repository: \"https://github.com/just-the-docs/just-the-docs\" # the github URL for your repo gh_edit_branch: \"main\" # the branch that your docs is served from # gh_edit_source: docs # the source that your files originate from gh_edit_view_mode: \"tree\" # \"tree\" or \"edit\" if you want the user to jump into the editor immediately . note: footer_content is deprecated, but still supported. For a better experience we have moved this into an include called _includes/footer_custom.html which will allow for robust markup / liquid-based content. | the “page last modified” data will only display if a page has a key called last_modified_date, formatted in some readable date format | last_edit_time_format uses Ruby’s DateTime formatter; see examples and more information at this link. | gh_edit_repository is the URL of the project’s GitHub repository | gh_edit_branch is the branch that the docs site is served from; defaults to main | gh_edit_source is the source directory that your project files are stored in (should be the same as site.source) | gh_edit_view_mode is \"tree\" by default, which brings the user to the github page; switch to \"edit\" to bring the user directly into editing mode | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#footer-content",
    "relUrl": "/docs/configuration/#footer-content"
  },"33": {
    "doc": "Configuration",
    "title": "Color scheme",
    "content": "# Color scheme supports \"light\" (default) and \"dark\" color_scheme: dark . Preview dark color scheme . See Customization for more information. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#color-scheme",
    "relUrl": "/docs/configuration/#color-scheme"
  },"34": {
    "doc": "Configuration",
    "title": "Google Analytics",
    "content": "# Google Analytics Tracking (optional) # e.g, UA-1234567-89 ga_tracking: UA-5555555-55 ga_tracking_anonymize_ip: true # Use GDPR compliant Google Analytics settings (true by default) . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#google-analytics",
    "relUrl": "/docs/configuration/#google-analytics"
  },"35": {
    "doc": "Configuration",
    "title": "Document collections",
    "content": "By default, the navigation and search include normal pages. Instead, you can also use Jekyll collections which group documents semantically together. For example, put all your documentation files in the _docs folder and create the docs collection: . # Define Jekyll collections collections: # Define a collection named \"docs\", its documents reside in the \"_docs\" directory docs: permalink: \"/:collection/:path/\" output: true just_the_docs: # Define which collections are used in just-the-docs collections: # Reference the \"docs\" collection docs: # Give the collection a name name: Documentation # Exclude the collection from the navigation # Supports true or false (default) nav_exclude: false # Exclude the collection from the search # Supports true or false (default) search_exclude: false . You can reference multiple collections. This creates categories in the navigation with the configured names. collections: docs: permalink: \"/:collection/:path/\" output: true tutorials: permalink: \"/:collection/:path/\" output: true just_the_docs: collections: docs: name: Documentation tutorials: name: Tutorials . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/configuration/#document-collections",
    "relUrl": "/docs/configuration/#document-collections"
  },"36": {
    "doc": "Customization",
    "title": "Customization",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/customization/",
    "relUrl": "/docs/customization/"
  },"37": {
    "doc": "Customization",
    "title": "Table of contents",
    "content": ". | Color schemes | Custom schemes . | Define a custom scheme | Use a custom scheme | Switchable custom scheme | . | Override and completely custom styles | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/customization/#table-of-contents",
    "relUrl": "/docs/customization/#table-of-contents"
  },"38": {
    "doc": "Customization",
    "title": "Color schemes",
    "content": "New . Just the Docs supports two color schemes: light (default), and dark. To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme supports \"light\" (default) and \"dark\" color_scheme: dark . Preview dark color scheme . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/customization/#color-schemes",
    "relUrl": "/docs/customization/#color-schemes"
  },"39": {
    "doc": "Customization",
    "title": "Custom schemes",
    "content": "Define a custom scheme . You can add custom schemes. If you want to add a scheme named foo (can be any name) just add a file _sass/color_schemes/foo.scss (replace foo by your scheme name) where you override theme variables to change colors, fonts, spacing, etc. Available variables are listed in the _variables.scss file. For example, to change the link color from the purple default to blue, include the following inside your scheme file: . Example . $link-color: $blue-000; . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. Please use scheme files. Use a custom scheme . To use the custom color scheme, only set the color_scheme parameter in your site’s _config.yml file: . color_scheme: foo . Switchable custom scheme . If you want to be able to change the scheme dynamically, for example via javascript, just add a file assets/css/just-the-docs-foo.scss (replace foo by your scheme name) with the following content: . --- --- {% include css/just-the-docs.scss.liquid color_scheme=\"foo\" %} . This allows you to switch the scheme via the following javascript. jtd.setTheme(\"foo\") . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/customization/#custom-schemes",
    "relUrl": "/docs/customization/#custom-schemes"
  },"40": {
    "doc": "Customization",
    "title": "Override and completely custom styles",
    "content": "For styles that aren’t defined as variables, you may want to modify specific CSS classes. Additionally, you may want to add completely custom CSS specific to your content. To do this, put your styles in the file _sass/custom/custom.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. For example, if you’d like to add your own styles for printing a page, you could add the following styles. Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em; } } . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/customization/#override-and-completely-custom-styles",
    "relUrl": "/docs/customization/#override-and-completely-custom-styles"
  },"41": {
    "doc": "Documento de Visão",
    "title": "Documento de Visão",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/",
    "relUrl": "/docs/produto/doc-visao/"
  },"42": {
    "doc": "Documento de Visão",
    "title": "Histórico de versão",
    "content": "| Data | Versão | Modificação | Autor | :–: | :—-: | :———: | :—: | 11/07/2022 | 1.0 | Criação do documento | Todos de MDS e EPS | 12/07/2022 | 1.1 | Criação do versionamento | Ailamar Alves | 18/07/2022 | 1.2 | Adição introdução e definições | Ailamar Alves | 20/07/2022 | 1.3 | Adição imagens | Ailamar Alves | 08/08/2022 | 1.4 | Correção do histórico de versões | Lucas Ganda | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#hist%C3%B3rico-de-vers%C3%A3o",
    "relUrl": "/docs/produto/doc-visao/#histórico-de-versão"
  },"43": {
    "doc": "Documento de Visão",
    "title": "Introdução",
    "content": "Lean Inception é a combinação eficaz do Design Thinking e do Lean StartUp para decidir o Produto Mínimo Viável (MVP). É um workshop colaborativo dividido em várias etapas e atividades que irão direcionar a equipe na construção do produto. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#introdu%C3%A7%C3%A3o",
    "relUrl": "/docs/produto/doc-visao/#introdução"
  },"44": {
    "doc": "Documento de Visão",
    "title": "Objetivo",
    "content": "Esse documento objetiva-se apresentar as funcionalidades inicialmente pensadas para a página web do EuPescador. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#objetivo",
    "relUrl": "/docs/produto/doc-visao/#objetivo"
  },"45": {
    "doc": "Documento de Visão",
    "title": "Visão do Produto",
    "content": "A visão do produto ajuda a trilhar o caminho inicial do projeto. Ela define a essência do valor de negócio e reflete uma mensagem clara para os clientes. Com uma visão clara do produto, é possível determinar como as peças do negócio vão se juntar. A partir do produto já existente e suas devidas melhorias, a equipe desenvolveu a seguinte visão do produto: . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#vis%C3%A3o-do-produto",
    "relUrl": "/docs/produto/doc-visao/#visão-do-produto"
  },"46": {
    "doc": "Documento de Visão",
    "title": "É - Não é / Faz - Não faz",
    "content": "É uma atividade que busca classificações sobre o produto seguindo as quatro diretrizes, indagando, especificamente, cada aspecto positivo e negativo sobre o produto ser ou fazer algo. Inicialmente temos a classificação do que o produto é e faz: . Decidir o que não fazer é tão importante quanto decidir o que fazer. Sendo assim temos: . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#%C3%A9---n%C3%A3o-%C3%A9--faz---n%C3%A3o-faz",
    "relUrl": "/docs/produto/doc-visao/#é---não-é--faz---não-faz"
  },"47": {
    "doc": "Documento de Visão",
    "title": "Objetivos do Produto",
    "content": "Nesta atividade cada integrante da equipe compartilha o que entende como objetivo para o produto. Os vários pontos de vista devem ser discutidos para chegar a um consenso sobre o que é realmente importante para levantamento e esclarecimento dos objetivos. Os integrantes listaram três objetivos para o negócio, que resultou em: . Agrupando cada objetivo por similaridade, foi criado o cluster: . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#objetivos-do-produto",
    "relUrl": "/docs/produto/doc-visao/#objetivos-do-produto"
  },"48": {
    "doc": "Documento de Visão",
    "title": "Personas",
    "content": "Uma persona cria uma representação realista de usuários, auxiliando a equipe a descrever funcionalidades do ponto de vista de quem vai interagir com o produto final. Uma persona representa um usuário do produto, descrevendo não só o seu papel, mas também características e necessidades. Para efetivamente identificar as funcionalidades necessárias, foram criados dois tipos de usuários e seus respectivos papéis na utilização do produto: . | Persona 1 representando um usuário pesquisador. | . | Persona 2 representando um usuário pescador. | . | Persona 3 representando um usuário pescador. | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#personas",
    "relUrl": "/docs/produto/doc-visao/#personas"
  },"49": {
    "doc": "Documento de Visão",
    "title": "Jornada do Usuário",
    "content": "Esta atividade descreve o percurso de um usuário por uma sequência de passos para alcançar seu objetivo. Os passos representam diferentes pontos de contato com o produto, caracterizando a interação da pessoa com ele. | Objetivo que a persona 1 busca alcançar. | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#jornada-do-usu%C3%A1rio",
    "relUrl": "/docs/produto/doc-visao/#jornada-do-usuário"
  },"50": {
    "doc": "Documento de Visão",
    "title": "Brainstorming de Funcionalidades",
    "content": "O brainstorming é uma técnica que propõe uma reunião com a equipe de projeto visando estimular a criação de ideias, voltadas a resolução do problema em questão. Assim é possível explorar potenciais soluções entre os membros e observar o problema de seus vários ângulos. Para auxílio da visão do projeto foi feito um brainstorming levantado as funcionalidades do EuPescador. Essas funcionalidades visam atender os objetivo de negócio, as necessidades das personas, e/ou um passo da jornada. As funcionalidades levantadas foram: . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#brainstorming-de-funcionalidades",
    "relUrl": "/docs/produto/doc-visao/#brainstorming-de-funcionalidades"
  },"51": {
    "doc": "Documento de Visão",
    "title": "Revisão Técnica, de Negócio e UX",
    "content": "Possui o objetivo de discutir como a equipe se sente em relação ao entendimento técnico, o de negócio e o de UX para cada funcionalidade. Nesta atividade, novas notas serão capturadas e as discordâncias e dúvidas ficarão mais aparentes. As funcionalidades foram listadas na imagem abaixo. As cores indicam o nível de confança, sendo verde maior confiança para desenvolvimento e vermelho menor confiança para desenvolvimento. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#revis%C3%A3o-t%C3%A9cnica-de-neg%C3%B3cio-e-ux",
    "relUrl": "/docs/produto/doc-visao/#revisão-técnica-de-negócio-e-ux"
  },"52": {
    "doc": "Documento de Visão",
    "title": "Sequenciador",
    "content": "O Sequenciador de funcionalidades auxilia na organização e visualização das funcionalidades e da sequência de validação incremental de desenvolvimento do produto. Inicialmente tem-se as funcionalidades trabalhadas no MVP e em seguida seus incrementos subsequentes. O sequenciador foi dividido para a aplicação mobile e web. | Sequenciador aplicação mobile. | . | Sequenciador aplicação web. | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#sequenciador",
    "relUrl": "/docs/produto/doc-visao/#sequenciador"
  },"53": {
    "doc": "Documento de Visão",
    "title": "MVP CANVAS",
    "content": "Este é um quadro visual que auxilia a alinhar e defnir a estratégia do MVP. Apresenta um resumo sobre o que foi discutido, o que compõe o MVP e o que esperar dele. | Canvas MVP aplicação mobile. | . | Canvas MVP aplicação mobile. | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#mvp-canvas",
    "relUrl": "/docs/produto/doc-visao/#mvp-canvas"
  },"54": {
    "doc": "Documento de Visão",
    "title": "Lean Inception",
    "content": "Para visualizar o mural completo acesse o link. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#lean-inception",
    "relUrl": "/docs/produto/doc-visao/#lean-inception"
  },"55": {
    "doc": "Documento de Visão",
    "title": "Referências",
    "content": ". | CAROLI, Paulo. Lean Inception: Como Alinhar Pessoas e Construir o Produto Certo. Caroli. Disponível em https://www.caroli.org/livro/lean-inception/. Acesso em: 12 jul. 2022. | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/doc-visao/#refer%C3%AAncias",
    "relUrl": "/docs/produto/doc-visao/#referências"
  },"56": {
    "doc": "Documento de Arquitetura",
    "title": "Definições Arquiteturais",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/documento-arquitetura/#defini%C3%A7%C3%B5es-arquiteturais",
    "relUrl": "/docs/produto/documento-arquitetura/#definições-arquiteturais"
  },"57": {
    "doc": "Documento de Arquitetura",
    "title": "Histórico de versão",
    "content": "| Data | Versão | Modificação | Autor | :–: | :—-: | :———: | :—: | 03/08/2022 | 1.0 | Criação do diagrama | André Freitas | 08/08/2022 | 1.1 | Criação do documento | Lucas Ganda | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/documento-arquitetura/#hist%C3%B3rico-de-vers%C3%A3o",
    "relUrl": "/docs/produto/documento-arquitetura/#histórico-de-versão"
  },"58": {
    "doc": "Documento de Arquitetura",
    "title": "Introdução",
    "content": "Esse documento tem como finalidade apresentar uma visão arquitetural do projeto EuPescador, facilitando dessa forma o entendimento do funcionamento dos processos envolvidos, além também tem como objetivo servir como uma atualização em relação ao documento anteriormente produzido no semestre 2021-2. Neste documento estará descritos os componentes, as estruturas e as tecnologias envolvidas no funcionamento do sistema. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/documento-arquitetura/#introdu%C3%A7%C3%A3o",
    "relUrl": "/docs/produto/documento-arquitetura/#introdução"
  },"59": {
    "doc": "Documento de Arquitetura",
    "title": "Escopo",
    "content": "O projeto do EuPescador é constituído por um sistema compostos de uma aplicação web e uma mobile que tem como finalidade principal permitir o registro, visualização e validação de espécimes aquáticos. Dessa forma facilitando o acompanhamento de ecossistemas aquáticos por parte dos pesquisadores a partir de informações fornecidas em campo por pescadores. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/documento-arquitetura/#escopo",
    "relUrl": "/docs/produto/documento-arquitetura/#escopo"
  },"60": {
    "doc": "Documento de Arquitetura",
    "title": "Tecnologias",
    "content": "Expo . Expo é uma plataforma que permite o desenvolvimento de aplicações mobile para Android e iOs. Node.js . O Node.js é um ambiente de execução JavaScript server-side que permite executar código Javascript ou Typescript fora do navegador, dessa forma permitindo construir aplicações web variadas, como APIs ou microsserviços. PostgreSQL . PostgreSQL é um sistema gerenciador de banco de dados relacional open-source e gratuito, um dos mais avançados e completos de código aberto. Heroku . A Heroku é uma plataforma nuvem que faz deploy de várias aplicações back-end seja para hospedagem, testes em produção ou escalar aplicações, também possui integraação com o Github. React Native . React Native é uma framework baseada no Javascript que tem como finalidade facilitar o desenvolvimeto de aplicações mobiles multiplataformas. React . React é uma biblioteca baseada no Javascript que tem como finalidade auxiliar na criação de interfaces para aplicações web, lançada e mantida pelo Facebook . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/documento-arquitetura/#tecnologias",
    "relUrl": "/docs/produto/documento-arquitetura/#tecnologias"
  },"61": {
    "doc": "Documento de Arquitetura",
    "title": "Diagrama",
    "content": ". ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/documento-arquitetura/#diagrama",
    "relUrl": "/docs/produto/documento-arquitetura/#diagrama"
  },"62": {
    "doc": "Documento de Arquitetura",
    "title": "Referências",
    "content": "Guia Completa de PostgreSQL: PostgreSQL do Básico ao Avançado. DevMedia. Disponível em: https://www.devmedia.com.br/guia/tecnologia-postgresql/34328. Acesso em: 8 ago. 2022. Guia Completo de Node.js: Aprenda Node.js do Básico ao Avançado. DevMedia. Disponível em: https://www.devmedia.com.br/guia/node-js/40312. Acesso em: 8 ago. 2022. Documento de Arquitetura. Eu_Pescador. Disponível em: https://fga-eps-mds.github.io/2021-2-Eu_Pescador-Doc/#/Product/ArchitectureDocument. Acesso em: 8 ago. 2022. Como documentar a Arquitetura de Software. Disponível em: http://www.linhadecodigo.com.br/artigo/3343/como-documentar-a-arquitetura-de-software.aspx. Acesso em: 8 ago. 2022. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/documento-arquitetura/#refer%C3%AAncias",
    "relUrl": "/docs/produto/documento-arquitetura/#referências"
  },"63": {
    "doc": "Documento de Arquitetura",
    "title": "Documento de Arquitetura",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/documento-arquitetura/",
    "relUrl": "/docs/produto/documento-arquitetura/"
  },"64": {
    "doc": "Markdown kitchen sink",
    "title": "Header 1",
    "content": "This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/index-test/#header-1",
    "relUrl": "/docs/index-test/#header-1"
  },"65": {
    "doc": "Markdown kitchen sink",
    "title": "Header 2",
    "content": "This is a blockquote following a header. When something is important enough, you do it even if the odds are not in your favor. Header 3 . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } . # Ruby code with syntax highlighting GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, \"= #{version}\") end . Header 4 with code not transformed . | This is an unordered list following a header. | This is an unordered list following a header. | This is an unordered list following a header. | . Header 5 . | This is an ordered list following a header. | This is an ordered list following a header. | This is an ordered list following a header. | . Header 6 . | head1 | head two | three | . | ok | good swedish fish | nice | . | out of stock | good and plenty | nice | . | ok | good oreos | hmm | . | ok | good zoute drop | yumm | . There’s a horizontal rule below this. Here is an unordered list: . | Item foo | Item bar | Item baz | Item zip | . And an ordered list: . | Item one | Item two | Item three | Item four | . And an ordered list, continued: . | Item one | Item two | . Some text . | Item three | Item four | . And an ordered list starting from 42: . | Item 42 | Item 43 | Item 44 | . And a nested list: . | level 1 item . | level 2 item | level 2 item . | level 3 item | level 3 item | . | . | level 1 item . | level 2 item | level 2 item | level 2 item | . | level 1 item . | level 2 item | level 2 item | . | level 1 item | . Nesting an ol in ul in an ol . | level 1 item (ul) . | level 2 item (ol) | level 2 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | . | level 1 item (ul) . | level 2 item (ol) | level 2 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | level 4 item (ol) | level 4 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | . | level 1 item (ul) | . And a task list . | Hello, this is a TODO item | Hello, this is another TODO item | Goodbye, this item is done | . Small image . Large image . “Wroclaw University Library digitizing rare archival texts” by j_cadmus is marked with CC BY 2.0. Definition lists can be used with HTML syntax. Name Godzilla Born 1952 Birthplace Japan Color Green Multiple description terms and values . Term Brief description of Term Longer Term Longer description of Term, possibly more than one line Term First description of Term, possibly more than one line Second description of Term, possibly more than one line . Term1 Term2 Single description of Term1 and Term2, possibly more than one line Term1 Term2 First description of Term1 and Term2, possibly more than one line Second description of Term1 and Term2, possibly more than one line . More code . Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. The final element. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/index-test/#header-2",
    "relUrl": "/docs/index-test/#header-2"
  },"66": {
    "doc": "Markdown kitchen sink",
    "title": "Markdown kitchen sink",
    "content": "Text can be bold, italic, or strikethrough. Link to another page. There should be whitespace between paragraphs. There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/index-test/",
    "relUrl": "/docs/index-test/"
  },"67": {
    "doc": "Home",
    "title": "Sobre o Projeto",
    "content": "Esse repositório foi criado para as disciplinas Métodos de Desenvolvimento de Software (MDS) e Engenharia do Produto de Software (EPS) da Universidade de Brasília com o intuito de documentar o desenvolvimento e resultados do projeto ao longo do semestre. O projeto em questão, escolhido pela equipe, foi o EuPescador. Espera-se que ao final do semestre esteja pronta uma nova versão do aplicativo mobile com as atualizações pendentes e sua versão web. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/#sobre-o-projeto",
    "relUrl": "/#sobre-o-projeto"
  },"68": {
    "doc": "Home",
    "title": "EuPescador",
    "content": "O EuPescador é uma aplicação web criada no semestre de 2021-1 por estudantes da Universidade de Brasília (FGA). O aplicativo tem o propósito de incentivar o mapeamento de espécies de peixes encontradas por pescadores ao longo de suas aventuras hidroviárias. Através do mapeamento com a localização dos animais e sua espécie, além da base de dados para trabalhadores da pesca, a aplicação auxilia pesquisadores e cientistas a identificar, controlar, registrar informações sobre os peixes e manter a preservação do ambiente aquático. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/#eupescador",
    "relUrl": "/#eupescador"
  },"69": {
    "doc": "Home",
    "title": "Contribuição",
    "content": "Para contribuir, você dever acessar o Repositório de documentação e verificar as politicas de commits, issues, branches e pull requests. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/#contribui%C3%A7%C3%A3o",
    "relUrl": "/#contribuição"
  },"70": {
    "doc": "Home",
    "title": "Time",
    "content": "Ailamar Alves (EPS) 160022673 André Aben-Athar (EPS) 170056155 Joao Gabriel A (EPS) 170013651 Lucas Ganda (EPS) 170039668 Wictor Bastos (EPS) 170047326 Bruno Henrique (MDS) 190134275 Daniel Rocha (MDS) 190104821 Ian da Costa (MDS) 190125829 Murilo Perazzo (MDS) 190129221 Pedro Lucas (MDS) 190115548 Pedro Menezes (MDS) 190139323 Raquel Eucaria (MDS) 202045268 Vera Lucia (MDS) 202045900 ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/#time",
    "relUrl": "/#time"
  },"71": {
    "doc": "Home",
    "title": "Home",
    "content": ". ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/",
    "relUrl": "/"
  },"72": {
    "doc": "Labels",
    "title": "Labels",
    "content": "Use labels as a way to add an additional mark to a section of your docs. Labels come in a few colors. By default, labels will be blue. Default label . Blue label . Stable . New release . Coming soon . Deprecated . Default label {: .label } Blue label {: .label .label-blue } Stable {: .label .label-green } New release {: .label .label-purple } Coming soon {: .label .label-yellow } Deprecated {: .label .label-red } . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/labels/",
    "relUrl": "/docs/ui-components/labels/"
  },"73": {
    "doc": "Layout",
    "title": "Layout Utilities",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/layout/#layout-utilities",
    "relUrl": "/docs/utilities/layout/#layout-utilities"
  },"74": {
    "doc": "Layout",
    "title": "Table of contents",
    "content": ". | Spacing | Horizontal Alignment | Vertical Alignment | Display | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/layout/#table-of-contents",
    "relUrl": "/docs/utilities/layout/#table-of-contents"
  },"75": {
    "doc": "Layout",
    "title": "Spacing",
    "content": "These spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively. | Classname prefix | What it does | . | .m- | margin | . | .mx- | margin-left, margin-right | . | .my- | margin top, margin bottom | . | .mt- | margin-top | . | .mr- | margin-right | . | .mb- | margin-bottom | . | .ml- | margin-left | . | Classname prefix | What it does | . | .p- | padding | . | .px- | padding-left, padding-right | . | .py- | padding top, padding bottom | . | .pt- | padding-top | . | .pr- | padding-right | . | .pb- | padding-bottom | . | .pl- | padding-left | . Spacing values are based on a 1rem = 16px spacing scale, broken down into these units: . | Spacer/suffix | Size in rems | Rem converted to px | . | 1 | 0.25rem | 4px | . | 2 | 0.5rem | 8px | . | 3 | 0.75rem | 12px | . | 4 | 1rem | 16px | . | 5 | 1.5rem | 24px | . | 6 | 2rem | 32px | . | 7 | 2.5rem | 40px | . | 8 | 3rem | 48px | . | auto | auto | auto | . Use mx-auto to horizontally center elements. Examples . In Markdown, use the {: } wrapper to apply custom classes: . This paragraph will have a margin bottom of 1rem/16px at large screens. {: .mb-lg-4 } This paragraph will have 2rem/32px of padding on the right and left at all screen sizes. {: .px-6 } . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/layout/#spacing",
    "relUrl": "/docs/utilities/layout/#spacing"
  },"76": {
    "doc": "Layout",
    "title": "Horizontal Alignment",
    "content": "| Classname | What it does | . | .float-left | float: left | . | .float-right | float: right | . | .flex-justify-start | justify-content: flex-start | . | .flex-justify-end | justify-content: flex-end | . | .flex-justify-between | justify-content: space-between | . | .flex-justify-around | justify-content: space-around | . Note: any of the flex- classes must be used on a parent element that has d-flex applied to it. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/layout/#horizontal-alignment",
    "relUrl": "/docs/utilities/layout/#horizontal-alignment"
  },"77": {
    "doc": "Layout",
    "title": "Vertical Alignment",
    "content": "| Classname | What it does | . | .v-align-baseline | vertical-align: baseline | . | .v-align-bottom | vertical-align: bottom | . | .v-align-middle | vertical-align: middle | . | .v-align-text-bottom | vertical-align: text-bottom | . | .v-align-text-top | vertical-align: text-top | . | .v-align-top | vertical-align: top | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/layout/#vertical-alignment",
    "relUrl": "/docs/utilities/layout/#vertical-alignment"
  },"78": {
    "doc": "Layout",
    "title": "Display",
    "content": "Display classes aid in adapting the layout of the elements on a page: . | Class |   | . | .d-block | display: block | . | .d-flex | display: flex | . | .d-inline | display: inline | . | .d-inline-block | display: inline-block | . | .d-none | display: none | . Use these classes in conjunction with the responsive modifiers. Examples . In Markdown, use the {: } wrapper to apply custom classes: . This button will be hidden until medium screen sizes: [ A button ](#url) {: .d-none .d-md-inline-block } These headings will be `inline-block`: ### heading 3 {: .d-inline-block } ### heading 3 {: .d-inline-block } . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/layout/#display",
    "relUrl": "/docs/utilities/layout/#display"
  },"79": {
    "doc": "Layout",
    "title": "Layout",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/layout/",
    "relUrl": "/docs/utilities/layout/"
  },"80": {
    "doc": "Code with line numbers",
    "title": "Code snippets with line numbers",
    "content": "The default settings for HTML compression are incompatible with the HTML produced by Jekyll (4.1.1 or earlier) for line numbers from highlighted code – both when using Kramdown code fences and when using Liquid highlight tags. To avoid non-conforming HTML and unsatisfactory layout, HTML compression can be turned off by using the following configuration option: . compress_html: ignore: envs: all . When using Kramdown code fences, line numbers are turned on globally by the following configuration option: . kramdown: syntax_highlighter_opts: block: line_numbers: true . Line numbers can then be suppressed locally using Liquid tags (without the linenos option) instead of fences: . {% highlight some_language %} Some code {% endhighlight %} . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/line-numbers/#code-snippets-with-line-numbers",
    "relUrl": "/docs/ui-components/code/line-numbers/#code-snippets-with-line-numbers"
  },"81": {
    "doc": "Code with line numbers",
    "title": "Workarounds",
    "content": "To use HTML compression together with line numbers, all highlighted code needs to be wrapped using one of the following workarounds. (The variable name some_var can be changed to avoid clashes; it can also be replaced by code – but note that code=code cannot be removed). Code fences (three backticks) . {% capture some_var %} ```some_language Some code ``` {% endcapture %} {% assign some_var = some_var | markdownify %} {% include fix_linenos.html code=some_var %} . Liquid highlighting . {% capture some_var %} {% highlight some_language linenos %} Some code {% endhighlight %} {% endcapture %} {% include fix_linenos.html code=some_var %} . Credit: The original version of the above workaround was suggested by Dmitry Hrabrov at https://github.com/penibelst/jekyll-compress-html/issues/71#issuecomment-188144901. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/line-numbers/#workarounds",
    "relUrl": "/docs/ui-components/code/line-numbers/#workarounds"
  },"82": {
    "doc": "Code with line numbers",
    "title": "Examples",
    "content": "✅ Using code fences + workaround (will only show line numbers if enabled globally in _config.yml): . // Javascript code with syntax highlighting in fences var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } . ✅ Using liquid highlighting + workaround: . | 1 2 3 4 . | # Ruby code with syntax highlighting and fixed line numbers using Liquid GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, \"= #{version}\") end . | . ❌ With the default configuration options, the following example illustrates the incorrect formatting arising from the incompatibility of HTML compression and the non-conforming HTML produced by Jekyll for line numbers: . | 1 2 3 4 . | # Ruby code with syntax highlighting and unfixed line numbers using Liquid GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, \"= #{version}\") end . | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/line-numbers/#examples",
    "relUrl": "/docs/ui-components/code/line-numbers/#examples"
  },"83": {
    "doc": "Code with line numbers",
    "title": "Code with line numbers",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/code/line-numbers/",
    "relUrl": "/docs/ui-components/code/line-numbers/"
  },"84": {
    "doc": "Lists",
    "title": "Lists",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/lists/",
    "relUrl": "/docs/ui-components/lists/"
  },"85": {
    "doc": "Lists",
    "title": "Table of contents",
    "content": ". | Unordered list | Ordered list | Task list | Definition list | . Most lists can be rendered with pure Markdown. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/lists/#table-of-contents",
    "relUrl": "/docs/ui-components/lists/#table-of-contents"
  },"86": {
    "doc": "Lists",
    "title": "Unordered list",
    "content": ". | Item 1 | Item 2 | Item 3 | . or . | Item 1 | Item 2 | Item 3 | . - Item 1 - Item 2 - Item 3 _or_ * Item 1 * Item 2 * Item 3 . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/lists/#unordered-list",
    "relUrl": "/docs/ui-components/lists/#unordered-list"
  },"87": {
    "doc": "Lists",
    "title": "Ordered list",
    "content": ". | Item 1 | Item 2 | Item 3 | . 1. Item 1 1. Item 2 1. Item 3 . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/lists/#ordered-list",
    "relUrl": "/docs/ui-components/lists/#ordered-list"
  },"88": {
    "doc": "Lists",
    "title": "Task list",
    "content": ". | hello, this is a todo item | hello, this is another todo item | goodbye, this item is done | . - [ ] hello, this is a todo item - [ ] hello, this is another todo item - [x] goodbye, this item is done . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/lists/#task-list",
    "relUrl": "/docs/ui-components/lists/#task-list"
  },"89": {
    "doc": "Lists",
    "title": "Definition list",
    "content": "Definition lists require HTML syntax and aren’t supported with the GitHub Flavored Markdown compiler. Name Godzilla Born 1952 Birthplace Japan Color Green &lt;dl&gt; &lt;dt&gt;Name&lt;/dt&gt; &lt;dd&gt;Godzilla&lt;/dd&gt; &lt;dt&gt;Born&lt;/dt&gt; &lt;dd&gt;1952&lt;/dd&gt; &lt;dt&gt;Birthplace&lt;/dt&gt; &lt;dd&gt;Japan&lt;/dd&gt; &lt;dt&gt;Color&lt;/dt&gt; &lt;dd&gt;Green&lt;/dd&gt; &lt;/dl&gt; . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/lists/#definition-list",
    "relUrl": "/docs/ui-components/lists/#definition-list"
  },"90": {
    "doc": "Navigation Structure",
    "title": "Navigation Structure",
    "content": ". | Navigation Structure . | Main navigation | Ordering pages . | Example | . | Excluding pages . | Example | . | Pages with children . | Example | Child pages . | Example | . | Auto-generating Table of Contents . | Example | . | Children with children . | Example | . | . | Auxiliary Links . | Example | . | In-page navigation with Table of Contents . | Example | Collapsible Table of Contents | . | . | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/navigation-structure/",
    "relUrl": "/docs/navigation-structure/"
  },"91": {
    "doc": "Navigation Structure",
    "title": "Main navigation",
    "content": "The main navigation for your Just the Docs site is on the left side of the page at large screens and on the top (behind a tap) on small screens. The main navigation can be structured to accommodate a multi-level menu system (pages with children and grandchildren). By default, all pages will appear as top level pages in the main nav unless a parent page is defined (see Pages with Children). ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/navigation-structure/#main-navigation",
    "relUrl": "/docs/navigation-structure/#main-navigation"
  },"92": {
    "doc": "Navigation Structure",
    "title": "Ordering pages",
    "content": "To specify a page order, you can use the nav_order parameter in your pages’ YAML front matter. Example . --- layout: default title: Customization nav_order: 4 --- . The parameter values determine the order of the top-level pages, and of child pages with the same parent. You can reuse the same parameter values (e.g., integers starting from 1) for the child pages of different parents. The parameter values can be numbers (integers, floats) and/or strings. When you omit nav_order parameters, they default to the titles of the pages, which are ordered alphabetically. Pages with numerical nav_order parameters always come before those with strings or default nav_order parameters. If you want to make the page order independent of the page titles, you can set explicit nav_order parameters on all pages. By default, all Capital letters come before all lowercase letters; you can add nav_sort: case_insensitive in the configuration file to ignore the case. Enclosing strings in quotation marks is optional. Note for users of previous versions: nav_sort: case_insensitive previously affected the ordering of numerical nav_order parameters: e.g., 10 came before 2. Also, all pages with explicit nav_order parameters previously came before all pages with default parameters. Both were potentially confusing, and they have now been eliminated. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/navigation-structure/#ordering-pages",
    "relUrl": "/docs/navigation-structure/#ordering-pages"
  },"93": {
    "doc": "Navigation Structure",
    "title": "Excluding pages",
    "content": "For specific pages that you do not wish to include in the main navigation, e.g. a 404 page or a landing page, use the nav_exclude: true parameter in the YAML front matter for that page. Example . --- layout: default title: 404 nav_exclude: true --- . The nav_exclude parameter does not affect the auto-generating list of child pages, which you can use to access pages excluded from the main navigation. Pages with no title are automatically excluded from the navigation. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/navigation-structure/#excluding-pages",
    "relUrl": "/docs/navigation-structure/#excluding-pages"
  },"94": {
    "doc": "Navigation Structure",
    "title": "Pages with children",
    "content": "Sometimes you will want to create a page with many children (a section). First, it is recommended that you keep pages that are related in a directory together… For example, in these docs, we keep all of the written documentation in the ./docs directory and each of the sections in subdirectories like ./docs/ui-components and ./docs/utilities. This gives us an organization like: . +-- .. |-- (Jekyll files) |-- docs |-- ui-components | |-- index.md (parent page) | |-- buttons.md | |-- code.md | |-- labels.md | |-- tables.md | +-- typography.md | |-- utilities | |-- index.md (parent page) | |-- color.md | |-- layout.md | |-- responsive-modifiers.md | +-- typography.md | |-- (other md files, pages with no children) | +-- .. |-- (Jekyll files) +-- .. On the parent pages, add this YAML front matter parameter: . | has_children: true (tells us that this is a parent page) | . Example . --- layout: default title: UI Components nav_order: 2 has_children: true --- . Here we’re setting up the UI Components landing page that is available at /docs/ui-components, which has children and is ordered second in the main nav. Child pages . On child pages, simply set the parent: YAML front matter to whatever the parent’s page title is and set a nav order (this number is now scoped within the section). Example . --- layout: default title: Buttons parent: UI Components nav_order: 2 --- . The Buttons page appears as a child of UI Components and appears second in the UI Components section. Auto-generating Table of Contents . By default, all pages with children will automatically append a Table of Contents which lists the child pages after the parent page’s content. To disable this auto Table of Contents, set has_toc: false in the parent page’s YAML front matter. Example . --- layout: default title: UI Components nav_order: 2 has_children: true has_toc: false --- . Children with children . Child pages can also have children (grandchildren). This is achieved by using a similar pattern on the child and grandchild pages. | Add the has_children attribute to the child | Add the parent and grand_parent attribute to the grandchild | . Example . --- layout: default title: Buttons parent: UI Components nav_order: 2 has_children: true --- . --- layout: default title: Buttons Child Page parent: Buttons grand_parent: UI Components nav_order: 1 --- . This would create the following navigation structure: . +-- .. |-- UI Components |-- .. | |-- Buttons | |-- Button Child Page | |-- .. | +-- .. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/navigation-structure/#pages-with-children",
    "relUrl": "/docs/navigation-structure/#pages-with-children"
  },"95": {
    "doc": "Navigation Structure",
    "title": "Auxiliary Links",
    "content": "To add auxiliary links to your site (in the upper right on all pages), add it to the aux_links configuration option in your site’s _config.yml file. Example . # Aux links for the upper right navigation aux_links: \"Just the Docs on GitHub\": - \"//github.com/just-the-docs/just-the-docs\" . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/navigation-structure/#auxiliary-links",
    "relUrl": "/docs/navigation-structure/#auxiliary-links"
  },"96": {
    "doc": "Navigation Structure",
    "title": "In-page navigation with Table of Contents",
    "content": "To generate a Table of Contents on your docs pages, you can use the {:toc} method from Kramdown, immediately after an &lt;ol&gt; in Markdown. This will automatically generate an ordered list of anchor links to various sections of the page based on headings and heading levels. There may be occasions where you’re using a heading and you don’t want it to show up in the TOC, so to skip a particular heading use the {: .no_toc } CSS class. Example . # Navigation Structure {: .no_toc } ## {: .no_toc .text-delta } 1. TOC {:toc} . This example skips the page name heading (#) from the TOC, as well as the heading for the Table of Contents itself (##) because it is redundant, followed by the table of contents itself. To get an unordered list, replace 1. TOC above by - TOC. Collapsible Table of Contents . The Table of Contents can be made collapsible using the &lt;details&gt; and &lt;summary&gt; elements , as in the following example. The attribute open (expands the Table of Contents by default) and the styling with {: .text-delta } are optional. &lt;details open markdown=\"block\"&gt; &lt;summary&gt; &lt;/summary&gt; {: .text-delta } 1. TOC {:toc} &lt;/details&gt; . The result is shown at the top of this page ({:toc} can be used only once on each page). ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/navigation-structure/#in-page-navigation-with-table-of-contents",
    "relUrl": "/docs/navigation-structure/#in-page-navigation-with-table-of-contents"
  },"97": {
    "doc": "Produto",
    "title": "Produto",
    "content": "hahahahahtility classes come in handy when you to want to override default styles to create additional whitespace (margins/padding), correct unexpected shifts in font size or weight, add color, or hide (or show) something at a specific screen size. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto",
    "relUrl": "/docs/produto"
  },"98": {
    "doc": "Protótipo de alta fidelidade",
    "title": "Protótipo de Alta Fidelidade",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-alta-fidelidade/#prot%C3%B3tipo-de-alta-fidelidade",
    "relUrl": "/docs/produto/prototipo-alta-fidelidade/#protótipo-de-alta-fidelidade"
  },"99": {
    "doc": "Protótipo de alta fidelidade",
    "title": "Histórico de versão",
    "content": "| Data | Versão | Modificação | Autor | :–: | :—-: | :———: | :—: | 19/07/2022 | 1.0 | Criação do protótipo | Wictor Bastos, Raquel Eucaria e Lucas Ganda | 20/07/2022 | 1.1 | Criação do versionamento | Ailamar Alves | 21/07/2022 | 1.2 | Adição das imagens | Ailamar Alves | 08/08/2022 | 1.3 | Correção do histórico de versão | Lucas Ganda | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-alta-fidelidade/#hist%C3%B3rico-de-vers%C3%A3o",
    "relUrl": "/docs/produto/prototipo-alta-fidelidade/#histórico-de-versão"
  },"100": {
    "doc": "Protótipo de alta fidelidade",
    "title": "Introdução",
    "content": "Um protótipo de alta fidelidade é uma representação interativa do produto, baseada no computador ou em dispositivos móveis. Esse protótipo apresenta maior semelhança com o design final em termos de detalhes e funcionalidade. Foi desenvolvido de acordo com a validação da prototipação de papel pelo cliente. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-alta-fidelidade/#introdu%C3%A7%C3%A3o",
    "relUrl": "/docs/produto/prototipo-alta-fidelidade/#introdução"
  },"101": {
    "doc": "Protótipo de alta fidelidade",
    "title": "Objetivo",
    "content": "Esse documento apresenta o protótipo de alta fidelidade para a página web do projeto EuPescador. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-alta-fidelidade/#objetivo",
    "relUrl": "/docs/produto/prototipo-alta-fidelidade/#objetivo"
  },"102": {
    "doc": "Protótipo de alta fidelidade",
    "title": "Protótipo",
    "content": "Página login . Gerência de usuários . Cadastro das espécies . Mapa de peixes . Lista de peixes . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-alta-fidelidade/#prot%C3%B3tipo",
    "relUrl": "/docs/produto/prototipo-alta-fidelidade/#protótipo"
  },"103": {
    "doc": "Protótipo de alta fidelidade",
    "title": "Referências",
    "content": ". | TASSIOAUAD. Prototipação. Disponível em: https://tassioauad.com/2017/02/02/prototipacao/. Acesso em: 20 jul. 2022. | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-alta-fidelidade/#refer%C3%AAncias",
    "relUrl": "/docs/produto/prototipo-alta-fidelidade/#referências"
  },"104": {
    "doc": "Protótipo de alta fidelidade",
    "title": "Protótipo de alta fidelidade",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-alta-fidelidade/",
    "relUrl": "/docs/produto/prototipo-alta-fidelidade/"
  },"105": {
    "doc": "Prototipo de papel",
    "title": "Protótipo de Papel",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-papel/#prot%C3%B3tipo-de-papel",
    "relUrl": "/docs/produto/prototipo-papel/#protótipo-de-papel"
  },"106": {
    "doc": "Prototipo de papel",
    "title": "Histórico de versão",
    "content": "| Data | Versão | Modificação | Autor | :–: | :—-: | :———: | :—: | 13/07/2022 | 1.0 | Criação do protótipo | Raquel Eucaria, Pedro Rodiguero, Daniel Oliveira e Vera Lúcia | 14/07/2022 | 1.1 | Criação do versionamento | Ailamar Alves | 26/07/2022 | 1.2 | Alteração das imagens | Ailamar Alves | 08/08/2022 | 1.3 | Correção do histórico de versão | Lucas Ganda | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-papel/#hist%C3%B3rico-de-vers%C3%A3o",
    "relUrl": "/docs/produto/prototipo-papel/#histórico-de-versão"
  },"107": {
    "doc": "Prototipo de papel",
    "title": "Introdução",
    "content": "A prototipagem de papel é uma técnica que permite criar e testar interfaces de usuário de forma rápida e barata em que os protótipos, de papel, geram um excelente feedback de observação sobre o comportamento do usuário em relação ao design. Foi utilizada no desenvolvimento da prototipação a base de funcionalidades já existentes na versão mobile. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-papel/#introdu%C3%A7%C3%A3o",
    "relUrl": "/docs/produto/prototipo-papel/#introdução"
  },"108": {
    "doc": "Prototipo de papel",
    "title": "Objetivo",
    "content": "Esse documento objetiva apresentar as funcionalidades inicialmente pensadas para a página web do EuPescador. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-papel/#objetivo",
    "relUrl": "/docs/produto/prototipo-papel/#objetivo"
  },"109": {
    "doc": "Prototipo de papel",
    "title": "Protótipo",
    "content": "Página login . Página de cadastro . Mapa de peixes . Barra de menu . Fluxo geral . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-papel/#prot%C3%B3tipo",
    "relUrl": "/docs/produto/prototipo-papel/#protótipo"
  },"110": {
    "doc": "Prototipo de papel",
    "title": "Referências",
    "content": ". | MEDIUM. Protótipos de Papel. Disponível em: https://medium.com/aela/prototipos-de-papel-9f812d5b0dcc. Acesso em: 14 jul. 2022. | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-papel/#refer%C3%AAncias",
    "relUrl": "/docs/produto/prototipo-papel/#referências"
  },"111": {
    "doc": "Prototipo de papel",
    "title": "Prototipo de papel",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/produto/prototipo-papel/",
    "relUrl": "/docs/produto/prototipo-papel/"
  },"112": {
    "doc": "Responsive Modifiers",
    "title": "Responsive modifiers",
    "content": "Just the Docs spacing works in conjunction with a variety of modifiers that allow you to target specific screen sizes responsively. Use these in conjunction with spacing and display prefix and suffix classes. | Modifier | Screen size | . | (none) | All screens until the next modifier | . | xs | 320px (20rem) and up | . | sm | 500px (31.25rem) and up | . | md | 740px (46.25rem) and up | . | lg | 1120px (70rem) and up | . | xl | 1400px (87.5rem) and up | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/responsive-modifiers/#responsive-modifiers",
    "relUrl": "/docs/utilities/responsive-modifiers/#responsive-modifiers"
  },"113": {
    "doc": "Responsive Modifiers",
    "title": "Responsive Modifiers",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/responsive-modifiers/",
    "relUrl": "/docs/utilities/responsive-modifiers/"
  },"114": {
    "doc": "Pesquisar",
    "title": "Search",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/search/#search",
    "relUrl": "/docs/search/#search"
  },"115": {
    "doc": "Pesquisar",
    "title": "Table of contents",
    "content": ". | TOC | . Just the Docs uses lunr.js to add a client-side search interface powered by a JSON index that Jekyll generates. All search results are shown in an auto-complete style interface (there is no search results page). By default, all generated HTML pages are indexed using the following data points: . | Page title | Page content | Page URL | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/search/#table-of-contents",
    "relUrl": "/docs/search/#table-of-contents"
  },"116": {
    "doc": "Pesquisar",
    "title": "Enable search in configuration",
    "content": "In your site’s _config.yml, enable search: . # Enable or disable the site search # Supports true (default) or false search_enabled: true . Search granularity . Pages are split into sections that can be searched individually. The sections are defined by the headings on the page. Each section is displayed in a separate search result. # Split pages into sections that can be searched individually # Supports 1 - 6, default: 2 search.heading_level: 2 . Search previews . A search result can contain previews that show where the search words are found in the specific section. # Maximum amount of previews per search result # Default: 3 search.previews: 3 # Maximum amount of words to display before a matched word in the preview # Default: 5 search.preview_words_before: 5 # Maximum amount of words to display after a matched word in the preview # Default: 10 search.preview_words_after: 10 . Search tokenizer . The default is for hyphens to separate tokens in search terms: gem-based is equivalent to gem based, matching either word. To allow search for hyphenated words: . # Set the search token separator # Default: /[\\s\\-/]+/ # Example: enable support for hyphenated search words search.tokenizer_separator: /[\\s/]+/ . Display URL in search results . # Display the relative url in search results # Supports true (default) or false search.rel_url: false . Display search button . The search button displays in the bottom right corner of the screen and triggers the search input when clicked. # Enable or disable the search button that appears in the bottom right corner of every page # Supports true or false (default) search.button: true . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/search/#enable-search-in-configuration",
    "relUrl": "/docs/search/#enable-search-in-configuration"
  },"117": {
    "doc": "Pesquisar",
    "title": "Hiding pages from search",
    "content": "Sometimes you might have a page that you don’t want to be indexed for the search nor to show up in search results, e.g, a 404 page. To exclude a page from search, add the search_exclude: true parameter to the page’s YAML front matter: . Example . --- layout: default title: Page not found nav_exclude: true search_exclude: true --- . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/search/#hiding-pages-from-search",
    "relUrl": "/docs/search/#hiding-pages-from-search"
  },"118": {
    "doc": "Pesquisar",
    "title": "Generate search index when used as a gem",
    "content": "If you use Just the Docs as a remote theme, you do not need the following steps. If you use the theme as a gem, you must initialize the search by running this rake command that comes with just-the-docs: . $ bundle exec just-the-docs rake search:init . This command creates the assets/js/zzzz-search-data.json file that Jekyll uses to create your search index. Alternatively, you can create the file manually with this content. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/search/#generate-search-index-when-used-as-a-gem",
    "relUrl": "/docs/search/#generate-search-index-when-used-as-a-gem"
  },"119": {
    "doc": "Pesquisar",
    "title": "Pesquisar",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/search/",
    "relUrl": "/docs/search/"
  },"120": {
    "doc": "Tables",
    "title": "Tables",
    "content": "Tables are responsive by default, allowing wide tables to have a horizontal scroll to access columns outside of the normal viewport. | head1 | head two | three | . | ok | good swedish fish | nice | . | out of stock | good and plenty | nice | . | ok | good oreos | hmm | . | ok | good zoute drop | yumm | . | head1 | head two | three |:-------------|:------------------|:------| ok | good swedish fish | nice | out of stock | good and plenty | nice | ok | good `oreos` | hmm | ok | good `zoute` drop | yumm | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/tables/",
    "relUrl": "/docs/ui-components/tables/"
  },"121": {
    "doc": "Typography",
    "title": "Typography",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/",
    "relUrl": "/docs/ui-components/typography/"
  },"122": {
    "doc": "Typography",
    "title": "Table of contents",
    "content": ". | Font stack | Responsive type scale | Headings | Body text | Inline elements | Typographic Utilities | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/#table-of-contents",
    "relUrl": "/docs/ui-components/typography/#table-of-contents"
  },"123": {
    "doc": "Typography",
    "title": "Font stack",
    "content": "By default, Just the Docs uses a native system font stack for sans-serif fonts: . system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif . ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz . For monospace type, like code snippets or the &lt;pre&gt; element, Just the Docs uses a native system font stack for monospace fonts: . \"SFMono-Regular\", Menlo, Consolas, Monospace . ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/#font-stack",
    "relUrl": "/docs/ui-components/typography/#font-stack"
  },"124": {
    "doc": "Typography",
    "title": "Responsive type scale",
    "content": "Just the Docs uses a responsive type scale that shifts depending on the viewport size. | Selector | Small screen size font-size | Large screen size font-size | . | h1, .text-alpha | 32px | 36px | . | h2, .text-beta | 18px | 24px | . | h3, .text-gamma | 16px | 18px | . | h4, .text-delta | 14px | 16px | . | h5, .text-epsilon | 16px | 18px | . | h6, .text-zeta | 18px | 24px | . | body | 14px | 16px | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/#responsive-type-scale",
    "relUrl": "/docs/ui-components/typography/#responsive-type-scale"
  },"125": {
    "doc": "Typography",
    "title": "Headings",
    "content": "Headings are rendered like this: . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/#headings",
    "relUrl": "/docs/ui-components/typography/#headings"
  },"126": {
    "doc": "Typography",
    "title": "Heading 1",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/",
    "relUrl": "/docs/ui-components/typography/"
  },"127": {
    "doc": "Typography",
    "title": "Heading 2",
    "content": "Heading 3 . Heading 4 . Heading 5 . Heading 6 . # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/",
    "relUrl": "/docs/ui-components/typography/"
  },"128": {
    "doc": "Typography",
    "title": "Body text",
    "content": "Default body text is rendered like this: . Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/#body-text",
    "relUrl": "/docs/ui-components/typography/#body-text"
  },"129": {
    "doc": "Typography",
    "title": "Inline elements",
    "content": "Text can be bold, italic, or strikethrough. Link to another page. Text can be **bold**, _italic_, or ~~strikethrough~~. [Link to another page](another-page). ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/#inline-elements",
    "relUrl": "/docs/ui-components/typography/#inline-elements"
  },"130": {
    "doc": "Typography",
    "title": "Typographic Utilities",
    "content": "There are a number of specific typographic CSS classes that allow you to override default styling for font size, font weight, line height, and capitalization. View typography utilities . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components/typography/#typographic-utilities",
    "relUrl": "/docs/ui-components/typography/#typographic-utilities"
  },"131": {
    "doc": "Typography",
    "title": "Typography Utilities",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/typography/#typography-utilities",
    "relUrl": "/docs/utilities/typography/#typography-utilities"
  },"132": {
    "doc": "Typography",
    "title": "Table of contents",
    "content": ". | Font size | Font weight | Line height | Text justification | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/typography/#table-of-contents",
    "relUrl": "/docs/utilities/typography/#table-of-contents"
  },"133": {
    "doc": "Typography",
    "title": "Font size",
    "content": "Use the .fs-1 - .fs-10 to set an explicit font-size. | Class | Small screen size font-size | Large screen size font-size | . | .fs-1 | 9px | 10px | . | .fs-2 | 11px | 12px | . | .fs-3 | 12px | 14px | . | .fs-4 | 14px | 16px | . | .fs-5 | 16px | 18px | . | .fs-6 | 18px | 24px | . | .fs-7 | 24px | 32px | . | .fs-8 | 32px | 38px | . | .fs-9 | 38px | 42px | . | .fs-10 | 42px | 48px | . Font size 1 . Font size 2 . Font size 3 . Font size 4 . Font size 5 . Font size 6 . Font size 7 . Font size 8 . Font size 9 . Font size 10 . In Markdown, use the `{: }` wrapper to apply custom classes: Font size 1 {: .fs-1 } Font size 2 {: .fs-2 } Font size 3 {: .fs-3 } Font size 4 {: .fs-4 } Font size 5 {: .fs-5 } Font size 6 {: .fs-6 } Font size 7 {: .fs-7 } Font size 8 {: .fs-8 } Font size 9 {: .fs-9 } Font size 10 {: .fs-10 } . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/typography/#font-size",
    "relUrl": "/docs/utilities/typography/#font-size"
  },"134": {
    "doc": "Typography",
    "title": "Font weight",
    "content": "Use the .fw-300 - .fw-700 to set an explicit font-size. Font weight 300 . Font weight 400 . Font weight 500 . Font weight 700 . In Markdown, use the `{: }` wrapper to apply custom classes: Font weight 300 {: .fw-300 } Font weight 400 {: .fw-400 } Font weight 500 {: .fw-500 } Font weight 700 {: .fw-700 } . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/typography/#font-weight",
    "relUrl": "/docs/utilities/typography/#font-weight"
  },"135": {
    "doc": "Typography",
    "title": "Line height",
    "content": "Use the lh- classes to explicitly apply line height to text. | Class | line-height value | Notes | . | .lh-0 | 0 |   | . | .lh-tight | 1.1 | Default for headings | . | .lh-default | 1.4 | Default for body (paragraphs) | . No Line height No Line height . Tight line height Tight line height . Default line height Default line height . In Markdown, use the `{: }` wrapper to apply custom classes: No Line height No Line height {: .lh-0 } Tight line height Tight line height {: .lh-tight } Default line height Default line height {: .fh-default } . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/typography/#line-height",
    "relUrl": "/docs/utilities/typography/#line-height"
  },"136": {
    "doc": "Typography",
    "title": "Text justification",
    "content": "By default text is justified left. Use these text- classes to override settings: . | Class | What it does | . | .text-left | text-align: left | . | .text-right | text-align: right | . | .text-center | text-align: center | . ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/typography/#text-justification",
    "relUrl": "/docs/utilities/typography/#text-justification"
  },"137": {
    "doc": "Typography",
    "title": "Typography",
    "content": " ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities/typography/",
    "relUrl": "/docs/utilities/typography/"
  },"138": {
    "doc": "UI Components",
    "title": "UI Components",
    "content": "To make it as easy as possible to write documentation in plain Markdown, most UI components are styled using default Markdown elements with few additional CSS classes needed. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/ui-components",
    "relUrl": "/docs/ui-components"
  },"139": {
    "doc": "Utilities",
    "title": "Utilities",
    "content": "hahahahahtility classes come in handy when you to want to override default styles to create additional whitespace (margins/padding), correct unexpected shifts in font size or weight, add color, or hide (or show) something at a specific screen size. ",
    "url": "http://0.0.0.0:4000/2022-1-EuPescador-Doc/docs/utilities",
    "relUrl": "/docs/utilities"
  }
}
